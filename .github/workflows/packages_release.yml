name: Packages (release)

on:
  push:
    branches:
    - master
    paths:
    - 'packages/**'

jobs:
  build:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    # When using in YOUR OWN repositories, change
    # variable BINTRAY_USERNAME to appropriate value.
    #
    # Bintray API key should be set through Github configuration
    # menu of your repository (see "Secrets"). Create
    # a new one with name 'BINTRAY_API_KEY'.
    env:
      ANDROID_HOME: "/opt/termux/android-sdk"
      NDK: "/opt/termux/android-ndk"
      BINTRAY_USERNAME: xeffyr
      BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
      BINTRAY_GPG_SUBJECT: xeffyr
      BINTRAY_GPG_PASSPHRASE: ${{ secrets.BINTRAY_GPG_PASSWORD }}
    strategy:
      matrix:
        target_arch: [aarch64, arm, i686, x86_64]
    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1000
    - name: Free additional disk space on host
      run: |
        sudo apt purge -yq $(dpkg -l | grep '^ii' | awk '{ print $2 }' | grep -P '(cabal-|dotnet-|ghc-|libmono|php)') \
          java-common liblldb-6.0 libllvm6.0:amd64 liblxc-common libx11-6:amd64 mono-runtime-common monodoc-manual \
          powershell ruby
        sudo apt autoremove -yq
    - name: Build and upload to Bintray
      run: |
        BASE_COMMIT=$(jq --raw-output .pull_request.base.sha "$GITHUB_EVENT_PATH")
        OLD_COMMIT=$(jq --raw-output .commits[0].id "$GITHUB_EVENT_PATH")
        HEAD_COMMIT=$(jq --raw-output .commits[-1].id "$GITHUB_EVENT_PATH")
        if [ "$BASE_COMMIT" = "null" ]; then
          if [ "$OLD_COMMIT" = "$HEAD_COMMIT" ]; then
            # Single-commit push.
            echo "Processing commit: ${HEAD_COMMIT}"
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r "${HEAD_COMMIT}")
          else
            # Multi-commit push.
            OLD_COMMIT="${OLD_COMMIT}~1"
            echo "Processing commit range: ${OLD_COMMIT}..${HEAD_COMMIT}"
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r "${OLD_COMMIT}" "${HEAD_COMMIT}")
          fi
        else
          # Pull requests.
          echo "Processing pull request #$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH"): ${BASE_COMMIT}..HEAD"
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r "${BASE_COMMIT}" "HEAD")
        fi
        # Process tag '%ci:no-build' that may be added as line to commit message.
        # Forces CI to cancel current build with status 'passed'.
        if grep -qiP '^\s*%ci:no-build\s*$' <(git log --format="%B" -n 1 "HEAD"); then
          echo "[!] Force exiting as tag '%ci:no-build' was applied to HEAD commit message."
          exit 0
        fi
        # Remove duplicates and deleted packages from $PACKAGE_NAMES.
        PACKAGE_NAMES=$(sed -nE 's@^packages/([^/]*)/([^/]*)(/.*)?$@\1@p' <<< "$CHANGED_FILES" | sort | uniq)
        DELETED_PACKAGE_NAMES=""
        for pkg in $PACKAGE_NAMES; do
          if [ ! -d "./packages/${pkg}" ]; then
            PACKAGE_NAMES=$(sed -E "s/(^|\s\s*)${pkg}(\$|\s\s*)/ /g" <<< "$PACKAGE_NAMES")
            DELETED_PACKAGE_NAMES+=" $pkg"
          fi
        done
        # Remove trailing spaces.
        PACKAGE_NAMES=$(sed 's/[[:blank:]]*$//' <<< "$PACKAGE_NAMES")
        DELETED_PACKAGE_NAMES=$(sed 's/[[:blank:]]*$//' <<< "$DELETED_PACKAGE_NAMES")
        # Process packages in this way:
        #  1. Build modified packages.
        #  2. If package was removed from Git, then delete it from hosting.
        #  3. Upload built packages to hosting.
        if [ -n "$PACKAGE_NAMES" ]; then
          ./scripts/lint-packages.sh $(echo "$PACKAGE_NAMES" | grep -P '^[a-zA-Z0-9]' | awk '{ print "./packages/"$0"/build.sh" }')
          ./start-builder.sh ./build-package.sh -a ${{ matrix.target_arch }} -I $PACKAGE_NAMES
          if [ -n "$DELETED_PACKAGE_NAMES" ]; then
            ./scripts/package_uploader.sh -d $DELETED_PACKAGE_NAMES
          fi
          [ -d ./termux-packages/debs ] && ./scripts/package_uploader.sh -p ./termux-packages/debs $PACKAGE_NAMES
        fi
