container:
  image: xeffyr/termux-extra-packages-builder:latest
  cpu: 8
  memory: 16

# Build packages.
build_task:
  # Run task only if packages were modified.
  # Note that similar check is done in 'scripts/get-modified-packages.sh'.
  only_if: "changesInclude('packages/**')"

  # 2 hours is a maximal timeout for free use.
  timeout_in: 120m

  environment:
    matrix:
      TERMUX_ARCH: aarch64
      TERMUX_ARCH: arm
      TERMUX_ARCH: i686
      TERMUX_ARCH: x86_64

  # Do not use built-in git client provided by Cirrus as it
  # causes problems when determining changed files.
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch="$CIRRUS_BRANCH" "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
      git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    else
      git clone --recursive "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
      git fetch origin "pull/$CIRRUS_PR/head:pull/$CIRRUS_PR"
      git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    fi

  # Copy packages into 'termux-packages' build environment.
  prepare_script: |
    for pkg in ./packages/*; do
        if [ ! -d "./termux-packages/packages/$(basename "$pkg")" ]; then
            cp -a "$pkg" ./termux-packages/packages/
        else
            echo "[!] Package '$(basename "$pkg")' already exists in build environment. Skipping."
        fi
    done

  # Determine changes in repository and build modified packages.
  build_script: |
    MODIFIED_PACKAGES=$(./scripts/get-modified-packages.sh)
    if [ -n "$MODIFIED_PACKAGES" ]; then
        cd ./termux-packages
        for package in $MODIFIED_PACKAGES; do
            if [ -n "$CIRRUS_PR" ]; then
                # Perform full builds for PR.
                ./build-package.sh -a "$TERMUX_ARCH" "$package"
            else
                ./build-package.sh -I -a "$TERMUX_ARCH" "$package"
            fi
        done
        if [ -d ./debs ]; then
            # Packages should be available for both cache and downloading.
            rm -rf "../debs-${TERMUX_ARCH}" ../debs
            mv ./debs "../cached-debs-${TERMUX_ARCH}"
            cp -a "../cached-debs-${TERMUX_ARCH}" ../debs
        fi
    fi

  # Make built packages available for the next tasks.
  share_aarch64_packages_cache:
    folder: "./cached-debs-aarch64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-aarch64"

  share_arm_packages_cache:
    folder: "./cached-debs-arm"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-arm"

  share_i686_packages_cache:
    folder: "./cached-debs-i686"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-i686"

  share_x86_64_packages_cache:
    folder: "./cached-debs-x86_64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-x86_64"

  # Also make them downloadable from the UI.
  store_packages_artifacts:
    path: "./debs/*.deb"

# Publish packages to Bintray.
publish_task:
  only_if: $CIRRUS_BRANCH == 'master'

  timeout_in: 30m

  depends_on:
    - build

  environment:
    BINTRAY_USERNAME: ENCRYPTED[5977e6c0f069d0bc9be4ed09044d59835767a5c71c541cbe47cd56736cc43f5191a9291bbc3031a9267f0be105651f25]
    BINTRAY_API_KEY: ENCRYPTED[04f4ee0fc194ca2f94959a623388d4c3ae1bf874e8fa876f79b2659fc9e8f6fea952275e97f2d022e43e2ab6c67d1198]

  # Retrieve built packages.
  share_aarch64_packages_cache:
    folder: "./cached-debs-aarch64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-aarch64"

  share_arm_packages_cache:
    folder: "./cached-debs-arm"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-arm"

  share_i686_packages_cache:
    folder: "./cached-debs-i686"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-i686"

  share_x86_64_packages_cache:
    folder: "./cached-debs-x86_64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-x86_64"

  # Publish.
  upload_to_bintray_script: |
    MODIFIED_PACKAGES=$(./scripts/get-modified-packages.sh)
    if [ -n "$MODIFIED_PACKAGES" ]; then
        mkdir ./debs
        for arch in aarch64 arm i686 x86_64; do
            if [ -d "./cached-debs-${arch}" ]; then
                cp -a "./cached-debs-${arch}"/*.deb ./debs/
            fi
        done
        ./scripts/package_uploader.sh $MODIFIED_PACKAGES
    fi
