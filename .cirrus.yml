container:
  image: xeffyr/termux-advanced-builder:latest
  cpu: 4
  memory: 8

##
##  Perform basic check for errors in build.sh package scripts.
##  If error found, exit with error code to stop build.
##
task:
  name: Lint packages

  auto_cancellation: $CIRRUS_BRANCH != 'master' && $CIRRUS_BRANCH != 'legacy'

  timeout_in: 5m

  script: |
    bash ./scripts/lint-packages.sh

##
##  Determine changes in the last push, find modified packages and
##  build them for aarch64/arm/i686/x86_64 architectures.
##
##  Built packages are accessible from Cirrus CI web interface.
##
task:
  name: Build packages

  auto_cancellation: $CIRRUS_BRANCH != 'master' && $CIRRUS_BRANCH != 'legacy'

  # 2 hours is a maximal timeout available for free use.
  timeout_in: 120m

  depends_on:
    - Lint packages

  environment:
    TERMUX_MAKE_PROCESSES: 4
    matrix:
      - TERMUX_ARCH: aarch64
      - TERMUX_ARCH: arm
      - TERMUX_ARCH: i686
      - TERMUX_ARCH: x86_64

  # Do not use built-in git client provided by Cirrus as it may
  # cause problems when determining changed files.
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
        git clone --recursive --branch="$CIRRUS_BRANCH" "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
        git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    else
        git clone --recursive "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
        git fetch origin "pull/$CIRRUS_PR/head:pull/$CIRRUS_PR"
        git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    fi

  build_script: |
    export TERMUX_DEBDIR="/tmp/debs-${TERMUX_ARCH}"
    ln -s "$TERMUX_DEBDIR" debs
    bash ./scripts/cirrus-ci_dispatcher.sh

  aarch64_debs_cache:
    folder: "/tmp/debs-aarch64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-aarch64-legacy"

  arm_debs_cache:
    folder: "/tmp/debs-arm"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-arm-legacy"

  i686_debs_cache:
    folder: "/tmp/debs-i686"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-i686-legacy"

  x86-64_debs_cache:
    folder: "/tmp/debs-x86_64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-x86_64-legacy"

  output_artifacts:
    path: "./debs/*.deb"

##
##  When doing release build, upload built packages to APT repository
##  on Bintray.
##
task:
  name: Upload packages to Bintray

  only_if: $CIRRUS_BRANCH == 'legacy' || $CIRRUS_BRANCH == 'master'

  auto_cancellation: $CIRRUS_BRANCH != 'master' && $CIRRUS_BRANCH != 'legacy'

  timeout_in: 60m

  depends_on:
    - Build packages

  environment:
    BINTRAY_USERNAME: ENCRYPTED[5977e6c0f069d0bc9be4ed09044d59835767a5c71c541cbe47cd56736cc43f5191a9291bbc3031a9267f0be105651f25]
    BINTRAY_API_KEY: ENCRYPTED[04f4ee0fc194ca2f94959a623388d4c3ae1bf874e8fa876f79b2659fc9e8f6fea952275e97f2d022e43e2ab6c67d1198]

  # Do not use built-in git client provided by Cirrus as it may
  # cause problems when determining changed files.
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
        git clone --recursive --branch="$CIRRUS_BRANCH" "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
        git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    else
        git clone --recursive "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
        git fetch origin "pull/$CIRRUS_PR/head:pull/$CIRRUS_PR"
        git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    fi

  aarch64_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-aarch64-legacy"

  arm_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-arm-legacy"

  i686_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-i686-legacy"

  x86-64_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-x86_64-legacy"

  script: |
    bash ./scripts/cirrus-ci_dispatcher.sh --upload
