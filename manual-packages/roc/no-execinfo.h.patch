diff -uNr roc-0.1.0/src/modules/roc_core/target_gnu/roc_core/backtrace.cpp roc-0.1.0.mod/src/modules/roc_core/target_gnu/roc_core/backtrace.cpp
--- roc-0.1.0/src/modules/roc_core/target_gnu/roc_core/backtrace.cpp	2019-05-28 12:41:33.000000000 +0300
+++ roc-0.1.0.mod/src/modules/roc_core/target_gnu/roc_core/backtrace.cpp	2019-06-15 16:09:57.537563872 +0300
@@ -7,7 +7,6 @@
  */
 
 #include <cxxabi.h>
-#include <execinfo.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -25,82 +24,14 @@
 } // namespace
 
 void print_backtrace() {
-    char* names[MaxDepth] = {};
-    void* array[MaxDepth] = {};
-
-    int size = backtrace(array, MaxDepth);
-
-    if (size <= 0) {
-        fprintf(stderr, "No backtrace available\n");
-    } else {
-        fprintf(stderr, "Backtrace:\n");
-
-        char** strings = backtrace_symbols(array, size);
-
-        for (int i = 0; i < size; i++) {
-            char* begin = NULL;
-            char* end = NULL;
-            char* mangled = NULL;
-
-            for (char* p = strings[i]; *p; ++p) {
-                if (*p == '(') {
-                    mangled = p;
-                } else if (*p == '+') {
-                    begin = p;
-                } else if (*p == ')') {
-                    end = p;
-                    break;
-                }
-            }
-
-            if (mangled && begin && end && mangled < begin) {
-                *mangled++ = '\0';
-                *begin++ = '\0';
-                *end++ = '\0';
-            }
-
-            int status = -1;
-
-            if (mangled) {
-                names[i] = abi::__cxa_demangle(mangled, 0, 0, &status);
-            }
-
-            fprintf(stderr, "# %s\n", status == 0 ? names[i] : strings[i]);
-        }
-
-        /* Call free() only after we've printed backtrace, since free() may
-         * abort() if heap is corrupted.
-         */
-        for (int i = 0; i < size; i++) {
-            free(names[i]);
-        }
-
-        free(strings);
-    }
+    fprintf(stderr, "Backtrace is not supported.\n");
 }
 
 void print_emergency_backtrace() {
-    void* array[MaxDepth] = {};
-    int size = backtrace(array, MaxDepth);
-
-    if (size <= 0) {
-        print_emergency_string("No backtrace available\n");
-    } else {
-        print_emergency_string("Backtrace:\n");
-        backtrace_symbols_fd(array, size, STDERR_FILENO);
-    }
+    fprintf(stderr, "Backtrace is not supported.\n");
 }
 
 void print_emergency_string(const char* str) {
-    size_t str_sz = strlen(str);
-    while (str_sz > 0) {
-        ssize_t ret = write(STDERR_FILENO, str, str_sz);
-        if (ret <= 0) {
-            return;
-        }
-        str += (size_t)ret;
-        str_sz -= (size_t)ret;
-    }
 }
 
 } // namespace core
diff -uNr roc-0.1.0/src/modules/roc_core/target_posix/roc_core/crash.cpp roc-0.1.0.mod/src/modules/roc_core/target_posix/roc_core/crash.cpp
--- roc-0.1.0/src/modules/roc_core/target_posix/roc_core/crash.cpp	2019-05-28 12:41:33.000000000 +0300
+++ roc-0.1.0.mod/src/modules/roc_core/target_posix/roc_core/crash.cpp	2019-06-15 16:10:53.721293198 +0300
@@ -69,9 +69,6 @@
 
 void signal_handler(int sig, siginfo_t* si, void*) {
     if (!crash_in_progress) {
-        print_emergency_string("\nERROR: ");
-        print_emergency_string(signal_string(sig, si));
-        print_emergency_string("\n\n");
         print_emergency_backtrace();
     }
     // this will finally kill us since we use SA_RESETHAND
