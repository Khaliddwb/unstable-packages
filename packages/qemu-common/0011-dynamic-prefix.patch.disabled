diff -uNr qemu-4.0.0/block.c qemu-4.0.0.mod/block.c
--- qemu-4.0.0/block.c	2019-04-30 15:59:43.759434051 +0300
+++ qemu-4.0.0.mod/block.c	2019-04-30 16:01:20.190247632 +0300
@@ -585,6 +585,24 @@
     return -ENOTSUP;
 }
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 /*
  * Create a uniquely-named empty temporary file.
  * Return 0 upon success, otherwise a negative errno value.
@@ -602,16 +620,19 @@
 #else
     int fd;
     const char *tmpdir;
+    char *prefixtmp_path = __prepend_prefix("/tmp");
     tmpdir = getenv("TMPDIR");
 
     if (!tmpdir) {
-        tmpdir = "@TERMUX_PREFIX@/tmp";
+        tmpdir = prefixtmp_path;
     }
 
     if (snprintf(filename, size, "%s/vl.XXXXXX", tmpdir) >= size) {
+        free(prefixtmp_path);
         return -EOVERFLOW;
     }
 
+    free(prefixtmp_path);
     fd = mkstemp(filename);
 
     if (fd < 0) {
diff -uNr qemu-4.0.0/hw/usb/ccid-card-emulated.c qemu-4.0.0.mod/hw/usb/ccid-card-emulated.c
--- qemu-4.0.0/hw/usb/ccid-card-emulated.c	2019-04-30 15:59:43.759434051 +0300
+++ qemu-4.0.0.mod/hw/usb/ccid-card-emulated.c	2019-04-30 16:01:20.190247632 +0300
@@ -438,15 +438,37 @@
     return vcard_emul_init(options);
 }
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 static int emulated_initialize_vcard_from_certificates(EmulatedState *card)
 {
     char emul_args[200];
     VCardEmulOptions *options = NULL;
 
+    char *prefix_nssdb_path = __prepend_prefix("/etc/pki/nssdb");
+
     snprintf(emul_args, sizeof(emul_args) - 1, CERTIFICATES_ARGS_TEMPLATE,
-        card->db ? card->db : "@TERMUX_PREFIX@/etc/pki/nssdb",
+        card->db ? card->db : prefix_nssdb_path,
         card->cert1, card->cert2, card->cert3);
 
+    free(prefix_nssdb_path);
+
     options = vcard_emul_options(emul_args);
 
     if (options == NULL) {
diff -uNr qemu-4.0.0/linux-user/syscall.c qemu-4.0.0.mod/linux-user/syscall.c
--- qemu-4.0.0/linux-user/syscall.c	2019-04-30 15:59:43.760434049 +0300
+++ qemu-4.0.0.mod/linux-user/syscall.c	2019-04-30 16:01:20.192247630 +0300
@@ -6795,6 +6795,24 @@
 }
 #endif
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 static int do_openat(void *cpu_env, int dirfd, const char *pathname, int flags, mode_t mode)
 {
     struct fake_open {
@@ -6830,11 +6848,14 @@
         char filename[PATH_MAX];
         int fd, r;
 
+        char *prefixtmp_path = __prepend_prefix("/tmp");
+
         /* create temporary file to map stat to */
         tmpdir = getenv("TMPDIR");
         if (!tmpdir)
-            tmpdir = "@TERMUX_PREFIX@/tmp";
+            tmpdir = prefixtmp_path;
         snprintf(filename, sizeof(filename), "%s/qemu-open.XXXXXX", tmpdir);
+        free(prefixtmp_path);
         fd = mkstemp(filename);
         if (fd < 0) {
             return fd;
diff -uNr qemu-4.0.0/migration/exec.c qemu-4.0.0.mod/migration/exec.c
--- qemu-4.0.0/migration/exec.c	2019-04-30 15:59:43.761434046 +0300
+++ qemu-4.0.0.mod/migration/exec.c	2019-04-30 16:01:20.192247630 +0300
@@ -28,7 +28,7 @@
 void exec_start_outgoing_migration(MigrationState *s, const char *command, Error **errp)
 {
     QIOChannel *ioc;
-    const char *argv[] = { "@TERMUX_PREFIX@/bin/sh", "-c", command, NULL };
+    const char *argv[] = { "/system/bin/sh", "-c", command, NULL };
 
     trace_migration_exec_outgoing(command);
     ioc = QIO_CHANNEL(qio_channel_command_new_spawn(argv,
@@ -55,7 +55,7 @@
 void exec_start_incoming_migration(const char *command, Error **errp)
 {
     QIOChannel *ioc;
-    const char *argv[] = { "@TERMUX_PREFIX@/bin/sh", "-c", command, NULL };
+    const char *argv[] = { "/system/bin/sh", "-c", command, NULL };
 
     trace_migration_exec_incoming(command);
     ioc = QIO_CHANNEL(qio_channel_command_new_spawn(argv,
diff -uNr qemu-4.0.0/net/tap.c qemu-4.0.0.mod/net/tap.c
--- qemu-4.0.0/net/tap.c	2019-04-30 15:59:43.761434046 +0300
+++ qemu-4.0.0.mod/net/tap.c	2019-04-30 16:01:20.192247630 +0300
@@ -526,7 +526,7 @@
             *parg++ = helper_cmd;
             *parg++ = NULL;
 
-            execv("@TERMUX_PREFIX@/bin/sh", args);
+            execv("/system/bin/sh", args);
         } else {
             /* assume helper is just the executable path name */
 
@@ -751,6 +751,24 @@
     return i;
 }
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 int net_init_tap(const Netdev *netdev, const char *name,
                  NetClientState *peer, Error **errp)
 {
@@ -903,9 +921,11 @@
             error_setg(errp, "vhostfds= is invalid if fds= wasn't specified");
             return -1;
         }
+        char *prefix_tap_up_script = __prepend_prefix("/etc/qemu-ifup");
+        char *prefix_tap_down_script = __prepend_prefix("/etc/qemu-ifdown");
 
-        script = tap->has_script ? tap->script : "@TERMUX_PREFIX@/etc/qemu-ifup";
-        downscript = tap->has_downscript ? tap->downscript : "@TERMUX_PREFIX@/etc/qemu-ifdown";
+        script = tap->has_script ? tap->script : prefix_tap_up_script;
+        downscript = tap->has_downscript ? tap->downscript : prefix_tap_down_script;
 
         if (tap->has_ifname) {
             pstrcpy(ifname, sizeof ifname, tap->ifname);
@@ -933,6 +953,9 @@
                              i >= 1 ? "no" : downscript,
                              vhostfdname, vnet_hdr, fd, &err);
 
+            free(prefix_tap_up_script);
+            free(prefix_tap_down_script);
+
             if (err) {
                 error_propagate(errp, err);
                 close(fd);
diff -uNr qemu-4.0.0/qemu-nbd.c qemu-4.0.0.mod/qemu-nbd.c
--- qemu-4.0.0/qemu-nbd.c	2019-04-30 15:59:43.761434046 +0300
+++ qemu-4.0.0.mod/qemu-nbd.c	2019-04-30 16:01:20.193247628 +0300
@@ -602,6 +602,24 @@
     bdrv_close_all();
 }
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 int main(int argc, char **argv)
 {
     BlockBackend *blk;
@@ -1048,8 +1066,10 @@
     }
 
     if (device != NULL && sockpath == NULL) {
+        char *prefix_sock_path = __prepend_prefix("/tmp/qemu-nbd-sock-%s");
         sockpath = g_malloc(128);
-        snprintf(sockpath, 128, "@TERMUX_PREFIX@/tmp/qemu-nbd-sock-%s", basename(device));
+        snprintf(sockpath, 128, prefix_sock_path, basename(device));
+        free(prefix_sock_path);
     }
 
     server = qio_net_listener_new();
diff -uNr qemu-4.0.0/slirp/src/slirp.c qemu-4.0.0.mod/slirp/src/slirp.c
--- qemu-4.0.0/slirp/src/slirp.c	2019-04-30 15:59:43.763434042 +0300
+++ qemu-4.0.0.mod/slirp/src/slirp.c	2019-04-30 16:01:20.194247627 +0300
@@ -119,6 +119,24 @@
 
 #else
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 static int get_dns_addr_cached(void *pdns_addr, void *cached_addr,
                                socklen_t addrlen,
                                struct stat *cached_stat, unsigned *cached_time)
@@ -132,7 +150,9 @@
 
     old_stat = *cached_stat;
 
-    int ret = stat("@TERMUX_PREFIX@/etc/resolv.conf", cached_stat);
+    char *resolvconf_path = __prepend_prefix("/etc/resolv.conf");
+    int ret = stat(resolvconf_path, cached_stat);
+    free(resolvconf_path);
 
     if (ret != 0) {
         return -1;
@@ -160,7 +180,9 @@
     void *tmp_addr = alloca(addrlen);
     unsigned if_index;
 
-    f = fopen("@TERMUX_PREFIX@/etc/resolv.conf", "r");
+    char *resolvconf_path = __prepend_prefix("/etc/resolv.conf");
+    f = fopen(resolvconf_path, "r");
+    free(resolvconf_path);
 
     if (!f)
         return -1;
diff -uNr qemu-4.0.0/tcg/tcg.c qemu-4.0.0.mod/tcg/tcg.c
--- qemu-4.0.0/tcg/tcg.c	2019-04-30 15:59:43.763434042 +0300
+++ qemu-4.0.0.mod/tcg/tcg.c	2019-04-30 16:01:20.194247627 +0300
@@ -4135,6 +4135,24 @@
     }
 }
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 static void tcg_register_jit_int(void *buf_ptr, size_t buf_size,
                                  const void *debug_frame,
                                  size_t debug_frame_size)
@@ -4315,7 +4333,10 @@
     /* Enable this block to be able to debug the ELF image file creation.
        One can use readelf, objdump, or other inspection utilities.  */
     {
-        FILE *f = fopen("@TERMUX_PREFIX@/tmp/qemu.jit", "w+b");
+        char *qemujit_tmp_file = __prepend_prefix("/tmp/qemu.jit");
+
+        FILE *f = fopen(qemujit_tmp_file, "w+b");
+        free(qemujit_tmp_file);
 
         if (f) {
             if (fwrite(img, img_size, 1, f) != img_size) {
diff -uNr qemu-4.0.0/util/qemu-sockets.c qemu-4.0.0.mod/util/qemu-sockets.c
--- qemu-4.0.0/util/qemu-sockets.c	2019-04-30 15:59:43.763434042 +0300
+++ qemu-4.0.0.mod/util/qemu-sockets.c	2019-04-30 16:01:20.194247627 +0300
@@ -823,6 +823,24 @@
 
 #ifndef _WIN32
 
+#ifndef ANDROID_PREPEND_PREFIX
+#define ANDROID_PREPEND_PREFIX 1
+int  asprintf(char** __s_ptr, const char* __fmt, ...);
+char* getenv(const char* __name);
+static __inline__ char *__prepend_prefix(char *path) {
+        char *_new_path;
+        char *_env_prefix = getenv("PREFIX");
+
+        if (_env_prefix) {
+                asprintf(&_new_path, "%s%s", _env_prefix, path);
+                return _new_path;
+        } else {
+                asprintf(&_new_path, "%s%s", "@TERMUX_PREFIX@", path);
+                return _new_path;
+        }
+}
+#endif
+
 static int unix_listen_saddr(UnixSocketAddress *saddr,
                              Error **errp)
 {
@@ -841,8 +859,10 @@
         path = saddr->path;
     } else {
         const char *tmpdir = getenv("TMPDIR");
-        tmpdir = tmpdir ? tmpdir : "@TERMUX_PREFIX@/tmp";
+        char *prefixtmp_path = __prepend_prefix("/tmp");
+        tmpdir = tmpdir ? tmpdir : prefixtmp_path;
         path = pathbuf = g_strdup_printf("%s/qemu-socket-XXXXXX", tmpdir);
+        free(prefixtmp_path);
     }
 
     if (strlen(path) > sizeof(un.sun_path)) {
